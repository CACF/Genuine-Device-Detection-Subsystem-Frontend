{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\CACF\\\\International Projects\\\\Genuine-Device-Detection-Subsystem-Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\CACF\\\\International Projects\\\\Genuine-Device-Detection-Subsystem-Frontend\\\\src\\\\components\\\\Breadcrumb\\\\Breadcrumb.js\";\n\n/*\r\nCopyright (c) 2018-2019 Qualcomm Technologies, Inc.\r\nAll rights reserved.\r\nRedistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the \r\ndisclaimer below) provided that the following conditions are met:\r\n    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer \r\n      in the documentation and/or other materials provided with the distribution.\r\n    * Neither the name of Qualcomm Technologies, Inc. nor the names of its contributors may be used to endorse or promote \r\n      products derived from this software without specific prior written permission.\r\n    * The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use \r\n      this software in a product, an acknowledgment is required by displaying the trademark/log as per the details provided \r\n      here: https://www.qualcomm.com/documents/dirbs-logo-and-brand-guidelines\r\n    * Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.\r\n    * This notice may not be removed or altered from any source distribution.\r\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED \r\nBY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO \r\nEVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport routes from '../../routes';\nimport { I18n } from 'react-i18next';\n\nvar findRouteName = function findRouteName(url) {\n  return routes[url];\n};\n\nvar getPaths = function getPaths(pathname) {\n  var paths = ['/'];\n  if (pathname === '/') return paths;\n  pathname.split('/').reduce(function (prev, curr, index) {\n    var currPath = \"\".concat(prev, \"/\").concat(curr);\n    paths.push(currPath);\n    return currPath;\n  });\n  return paths;\n};\n\nvar BreadcrumbsItem = function BreadcrumbsItem(_ref) {\n  var match = _ref.match,\n      rest = _objectWithoutProperties(_ref, [\"match\"]);\n\n  var routeName = findRouteName(match.url);\n\n  if (routeName) {\n    return /*#__PURE__*/React.createElement(I18n, {\n      ns: \"translations\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, function (t, _ref2) {\n      var i18n = _ref2.i18n;\n      return match.isExact ? /*#__PURE__*/React.createElement(BreadcrumbItem, {\n        active: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, t(routeName)) : /*#__PURE__*/React.createElement(BreadcrumbItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: match.url || '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, t(routeName) === t('DashboardLink') ? t('home') : t(routeName)));\n    });\n  }\n\n  return null;\n};\n\nvar Breadcrumbs = function Breadcrumbs(_ref3) {\n  var pathname = _ref3.location.pathname,\n      match = _ref3.match,\n      rest = _objectWithoutProperties(_ref3, [\"location\", \"match\"]);\n\n  var paths = getPaths(pathname);\n  var items = paths.map(function (path, i) {\n    return /*#__PURE__*/React.createElement(Route, {\n      key: i++,\n      path: path,\n      component: BreadcrumbsItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 40\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, items);\n};\n\nexport default (function (props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Route, Object.assign({\n    path: \"/:path\",\n    component: Breadcrumbs\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  })));\n});","map":{"version":3,"sources":["D:/CACF/International Projects/Genuine-Device-Detection-Subsystem-Frontend/src/components/Breadcrumb/Breadcrumb.js"],"names":["React","Route","Link","Breadcrumb","BreadcrumbItem","routes","I18n","findRouteName","url","getPaths","pathname","paths","split","reduce","prev","curr","index","currPath","push","BreadcrumbsItem","match","rest","routeName","t","i18n","isExact","Breadcrumbs","location","items","map","path","i","props"],"mappings":"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","sourcesContent":["/*\r\nCopyright (c) 2018-2019 Qualcomm Technologies, Inc.\r\nAll rights reserved.\r\nRedistribution and use in source and binary forms, with or without modification, are permitted (subject to the limitations in the \r\ndisclaimer below) provided that the following conditions are met:\r\n    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer \r\n      in the documentation and/or other materials provided with the distribution.\r\n    * Neither the name of Qualcomm Technologies, Inc. nor the names of its contributors may be used to endorse or promote \r\n      products derived from this software without specific prior written permission.\r\n    * The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use \r\n      this software in a product, an acknowledgment is required by displaying the trademark/log as per the details provided \r\n      here: https://www.qualcomm.com/documents/dirbs-logo-and-brand-guidelines\r\n    * Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.\r\n    * This notice may not be removed or altered from any source distribution.\r\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE. THIS SOFTWARE IS PROVIDED \r\nBY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO \r\nEVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, \r\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\nimport React from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport routes from '../../routes';\r\nimport { I18n } from 'react-i18next';\r\n\r\nconst findRouteName = url => routes[url];\r\n\r\nconst getPaths = (pathname) => {\r\n  const paths = ['/'];\r\n\r\n  if (pathname === '/') return paths;\r\n\r\n  pathname.split('/').reduce((prev, curr, index) => {\r\n    const currPath = `${prev}/${curr}`;\r\n    paths.push(currPath);\r\n    return currPath;\r\n  });\r\n  return paths;\r\n};\r\n\r\nconst BreadcrumbsItem = ({match, ...rest}) => {\r\n  const routeName = findRouteName(match.url);\r\n  if (routeName) {\r\n    return (\r\n      <I18n ns=\"translations\">\r\n        {\r\n          (t, { i18n }) => (\r\n            match.isExact ?\r\n            (\r\n              <BreadcrumbItem active>{t(routeName)}</BreadcrumbItem>\r\n            ) :\r\n            (\r\n              <BreadcrumbItem>\r\n                <Link to={match.url || ''}>\r\n                  {t(routeName) === t('DashboardLink') ? t('home') : t(routeName)}\r\n                </Link>\r\n              </BreadcrumbItem>\r\n            )\r\n          )\r\n        }\r\n      </I18n>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst Breadcrumbs = ({location : {pathname}, match, ...rest}) => {\r\n  const paths = getPaths(pathname);\r\n  const items = paths.map((path, i) => <Route key={i++} path={path} component={BreadcrumbsItem}/>);\r\n  return (\r\n    <Breadcrumb>\r\n      {items}\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport default props => (\r\n  <div>\r\n    <Route path=\"/:path\" component={Breadcrumbs} {...props} />\r\n  </div>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}